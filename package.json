{
    "name": "vscode-vault",
    "version": "2.3.0",
    "publisher": "owenfarrell",
    "engines": {
        "vscode": "^1.63.0"
    },
    "license": "MIT",
    "displayName": "HashiCorp Vault",
    "description": "Manages interactions with HashiCorp Vault",
    "categories": [
        "Other"
    ],
    "keywords": [
        "HashiCorp",
        "Vault",
        "secret",
        "password",
        "encrypt"
    ],
    "homepage": "https://github.com/owenfarrell/vscode-vault/",
    "bugs": {
        "url": "https://github.com/owenfarrell/vscode-vault/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/owenfarrell/vscode-vault.git"
    },
    "galleryBanner": {},
    "main": "./dist/extension",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Vault Configuration",
            "properties": {
                "vault.trustedAuthorities": {
                    "type": "array",
                    "description": "A set of trusted authorities for which strict SSL checking will be skipped.",
                    "items": {
                        "description": "The hostname and port of a trusted Vault service",
                        "type": "string"
                    }
                },
                "vault.clipboardTimeout": {
                    "type": "number",
                    "default": 60,
                    "description": "Specifies the amount of time (in seconds) for which a copied value will be available on the clipboard."
                },
                "vault.saveConfigurations": {
                    "type": "boolean",
                    "default": true,
                    "description": "Save server configurations (name, URL, and login method) and auto-populate when opening a new window."
                }
            }
        },
        "commands": [
            {
                "command": "vault.browse",
                "title": "Browse Path",
                "category": "Vault",
                "icon": "$(search)"
            },
            {
                "command": "vault.connect",
                "title": "Connect to Server",
                "category": "Vault",
                "icon": "$(plus)"
            },
            {
                "command": "vault.copy",
                "title": "Copy Secret",
                "category": "Vault"
            },
            {
                "command": "vault.disconnect",
                "title": "Disconnect from Server",
                "category": "Vault",
                "icon": "$(debug-disconnect)"
            },
            {
                "command": "vault.delete",
                "title": "Delete Secret",
                "category": "Vault",
                "icon": "$(trash)"
            },
            {
                "command": "vault.list",
                "title": "Refresh",
                "category": "Vault",
                "icon": "$(refresh)"
            },
            {
                "command": "vault.read",
                "title": "Read Secret",
                "category": "Vault",
                "icon": "$(link-external)"
            },
            {
                "command": "vault.reconnect",
                "title": "Connect",
                "category": "Vault",
                "icon": "$(plug)"
            },
            {
                "command": "vault.remove",
                "title": "Remove",
                "category": "Vault",
                "icon": "$(close)"
            },
            {
                "command": "vault.write",
                "title": "Write Secret",
                "category": "Vault",
                "icon": "$(edit)"
            }
        ],
        "keybindings": [
            {
                "key": "ctrl+c",
                "mac": "cmd+c",
                "command": "vault.copy",
                "when": "sideBarFocus && focusedView == vaultSecrets"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "vault.browse",
                    "when": "false"
                },
                {
                    "command": "vault.copy",
                    "when": "false"
                },
                {
                    "command": "vault.delete",
                    "when": "false"
                },
                {
                    "command": "vault.disconnect",
                    "when": "false"
                },
                {
                    "command": "vault.list",
                    "when": "false"
                },
                {
                    "command": "vault.read",
                    "when": "false"
                },
                {
                    "command": "vault.reconnect",
                    "when": "false"
                },
                {
                    "command": "vault.remove",
                    "when": "false"
                },
                {
                    "command": "vault.write",
                    "when": "false"
                }
            ],
            "view/item/context": [
                {
                    "command": "vault.reconnect",
                    "group": "inline@1",
                    "when": "view == vaultSecrets && viewItem == server"
                },
                {
                    "command": "vault.remove",
                    "group": "inline@2",
                    "when": "view == vaultSecrets && viewItem == server"
                },
                {
                    "command": "vault.browse",
                    "group": "inline@1",
                    "when": "view == vaultSecrets && viewItem == connection"
                },
                {
                    "command": "vault.disconnect",
                    "group": "inline@2",
                    "when": "view == vaultSecrets && viewItem == connection"
                },
                {
                    "command": "vault.list",
                    "group": "inline@1",
                    "when": "view == vaultSecrets && viewItem == path"
                },
                {
                    "command": "vault.write",
                    "group": "inline@2",
                    "when": "view == vaultSecrets && viewItem == path"
                },
                {
                    "command": "vault.read",
                    "group": "inline@1",
                    "when": "view == vaultSecrets && viewItem == secret"
                },
                {
                    "command": "vault.write",
                    "group": "inline@2",
                    "when": "view == vaultSecrets && viewItem == secret"
                },
                {
                    "command": "vault.delete",
                    "when": "view == vaultSecrets && viewItem == secret"
                }
            ],
            "view/title": [
                {
                    "command": "vault.connect",
                    "group": "navigation",
                    "when": "view == vaultSecrets"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "vaultSecrets",
                    "name": "Vaults"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "vaultSecrets",
                "contents": "\nYou are not connected to any Vaults.\n\n[Add Vault](command:vault.connect)"
            }
        ]
    },
    "activationEvents": [
        "onView:vaultSecrets",
        "onCommand:vault.connect",
        "onCommand:vault.delete",
        "onCommand:vault.list",
        "onCommand:vault.read",
        "onCommand:vault.write"
    ],
    "badges": [],
    "markdown": "github",
    "dependencies": {
        "flat": "^5.0.2",
        "http-status-codes": "^1.4.0",
        "node-vault": "0.9.16",
        "validator": "^13.7.0",
        "vscode-uri": "^1.0.8"
    },
    "devDependencies": {
        "@types/chai": "^4.2.11",
        "@types/flat": "^5.0.1",
        "@types/mocha": "^9.1.1",
        "@types/node": "^16.11.29",
        "@types/request": "^2.48.5",
        "@types/uuid": "^8.0.0",
        "@types/validator": "^13.0.0",
        "@types/vscode": "1.42.0",
        "@typescript-eslint/eslint-plugin": "^5.20.0",
        "@typescript-eslint/parser": "^5.20.0",
        "ajv": "^6.12.4",
        "chai": "^4.2.0",
        "circular-dependency-plugin": "^5.2.0",
        "delay": "^4.3.0",
        "eslint": "^7.2.0",
        "eslint-config-standard": "^14.1.1",
        "eslint-plugin-import": "^2.25.3",
        "eslint-plugin-mocha": "^7.0.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-promise": "^4.2.1",
        "eslint-plugin-standard": "^4.0.1",
        "mocha": "^9.2.2",
        "mocha-steps": "^1.3.0",
        "mocha-suite-hooks": "^0.1.0",
        "rimraf": "^3.0.2",
        "source-map-support": "^0.5.19",
        "ts-loader": "^6.2.2",
        "tsconfig-paths-webpack-plugin": "^3.3.0",
        "typescript": "^4.6.3",
        "uuid": "^8.3.0",
        "vsce": "^2.7.0",
        "vscode-extension-tester": "^4.2.4",
        "webpack": "^5.72.0",
        "webpack-cli": "^4.9.2"
    },
    "scripts": {
        "clean": "rimraf dist out test-extensions test-resources *.vsix",
        "build": "vsce package -o vscode-vault.vsix",
        "compile": "webpack --mode development --watch",
        "lint": "eslint 'src/**/*'",
        "pretest": "tsc -p ./",
        "test": "VAULT_TOKEN=50m35up3r53cr3770k3n extest setup-and-run out/test/test.js --extensions_dir test-extensions",
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development"
    },
    "icon": "icon.png"
}
